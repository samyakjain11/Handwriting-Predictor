//
// Created by Samyak Jain on 10/11/20.
//
#include <core/image.h>
#include <core/model_generator.h>

#include <catch2/catch.hpp>
#include <iostream>

TEST_CASE("checking probability calculations for classes")
{
  std::vector<image::Image> images;

  image::Image zeroImage = image::Image("###\n# #\n###", '0', '#', '+', ' ', 3);
  image::Image oneImage = image::Image(" # \n # \n # ", '1', '#', '+', ' ', 3);
  image::Image twoImage = image::Image("###\n # \n###", '2', '#', '+', ' ', 3);
  image::Image threeImage =
      image::Image("###\n ##\n###", '3', '#', '+', ' ', 3);
  image::Image fourImage = image::Image("# #\n###\n  #", '4', '#', '+', ' ', 3);
  image::Image fiveImage = image::Image("###\n## \n## ", '5', '#', '+', ' ', 3);
  image::Image sixImage = image::Image("#  \n## \n## ", '6', '#', '+', ' ', 3);
  image::Image sevenImage =
      image::Image("###\n # \n#  ", '7', '#', '+', ' ', 3);
  image::Image eightImage =
      image::Image("###\n # \n###", '8', '#', '+', ' ', 3);
  image::Image nineImage = image::Image(" ##\n ##\n  #", '9', '#', '+', ' ', 0);

  images.push_back(zeroImage);
  images.push_back(oneImage);
  images.push_back(twoImage);
  images.push_back(threeImage);
  images.push_back(fourImage);
  images.push_back(fiveImage);
  images.push_back(sixImage);
  images.push_back(sevenImage);
  images.push_back(eightImage);
  images.push_back(nineImage);

  ModelGenerator modelGenerator = ModelGenerator(images, 3);

  std::string compare = "-1.791759\n"
      "-1.791759\n"
      "-1.791759\n"
      "-1.791759\n"
      "-1.791759\n"
      "-1.791759\n"
      "-1.791759\n"
      "-1.791759\n"
      "-1.791759\n"
      "-1.791759\n"
      "\n"
      "-0.176091 -0.477121\n"
      "-0.176091 -0.477121\n"
      "-0.176091 -0.477121\n"
      "-0.176091 -0.477121\n"
      "-0.477121 -0.176091\n"
      "-0.176091 -0.477121\n"
      "-0.176091 -0.477121\n"
      "-0.176091 -0.477121\n"
      "-0.176091 -0.477121\n"
      "-0.477121 -0.176091\n"
      "-0.176091 -0.477121\n"
      "-0.477121 -0.176091\n"
      "-0.477121 -0.176091\n"
      "-0.176091 -0.477121\n"
      "-0.477121 -0.176091\n"
      "-0.477121 -0.176091\n"
      "-0.176091 -0.477121\n"
      "-0.477121 -0.176091\n"
      "-0.176091 -0.477121\n"
      "-0.176091 -0.477121\n"
      "-0.176091 -0.477121\n"
      "-0.477121 -0.176091\n"
      "-0.176091 -0.477121\n"
      "-0.477121 -0.176091\n"
      "-0.176091 -0.477121\n"
      "-0.176091 -0.477121\n"
      "-0.176091 -0.477121\n"
      "-0.176091 -0.477121\n"
      "-0.176091 -0.477121\n"
      "-0.176091 -0.477121\n"
      "-0.477121 -0.176091\n"
      "-0.176091 -0.477121\n"
      "-0.176091 -0.477121\n"
      "-0.176091 -0.477121\n"
      "-0.176091 -0.477121\n"
      "-0.176091 -0.477121\n"
      "-0.176091 -0.477121\n"
      "-0.477121 -0.176091\n"
      "-0.176091 -0.477121\n"
      "-0.176091 -0.477121\n"
      "-0.176091 -0.477121\n"
      "-0.176091 -0.477121\n"
      "-0.477121 -0.176091\n"
      "-0.477121 -0.176091\n"
      "-0.176091 -0.477121\n"
      "-0.176091 -0.477121\n"
      "-0.176091 -0.477121\n"
      "-0.176091 -0.477121\n"
      "-0.176091 -0.477121\n"
      "-0.176091 -0.477121\n"
      "-0.477121 -0.176091\n"
      "-0.176091 -0.477121\n"
      "-0.176091 -0.477121\n"
      "-0.477121 -0.176091\n"
      "-0.176091 -0.477121\n"
      "-0.477121 -0.176091\n"
      "-0.477121 -0.176091\n"
      "-0.176091 -0.477121\n"
      "-0.176091 -0.477121\n"
      "-0.477121 -0.176091\n"
      "-0.176091 -0.477121\n"
      "-0.176091 -0.477121\n"
      "-0.477121 -0.176091\n"
      "-0.176091 -0.477121\n"
      "-0.176091 -0.477121\n"
      "-0.176091 -0.477121\n"
      "-0.477121 -0.176091\n"
      "-0.176091 -0.477121\n"
      "-0.477121 -0.176091\n"
      "-0.176091 -0.477121\n"
      "-0.477121 -0.176091\n"
      "-0.477121 -0.176091\n"
      "-0.176091 -0.477121\n"
      "-0.176091 -0.477121\n"
      "-0.176091 -0.477121\n"
      "-0.477121 -0.176091\n"
      "-0.176091 -0.477121\n"
      "-0.477121 -0.176091\n"
      "-0.176091 -0.477121\n"
      "-0.176091 -0.477121\n"
      "-0.176091 -0.477121\n"
      "-0.477121 -0.176091\n"
      "-0.176091 -0.477121\n"
      "-0.176091 -0.477121\n"
      "-0.477121 -0.176091\n"
      "-0.176091 -0.477121\n"
      "-0.176091 -0.477121\n"
      "-0.477121 -0.176091\n"
      "-0.477121 -0.176091\n"
      "-0.176091 -0.477121\n"
      "";

  std::string generatedModel = modelGenerator.GenerateModelAsString();

  REQUIRE(generatedModel == compare);

}

TEST_CASE("pass empty image vector")
{
  std::vector<image::Image> images;
  REQUIRE_THROWS_AS(ModelGenerator(images, 3), std::invalid_argument);
}

